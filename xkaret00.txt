#### Stručně odpovězte na následující otázky: ######

1. Proč je nutné určovat, zda má výpočet pokračovat?
==============================================================================
Aby sme zbytocne neiterovali nad uz hotovym riadkom. Toto moze sposobit znacne
spomalenie celkoveho vypoctu.

2. Byla "Line" vektorizace efektivní? Proč?
==============================================================================
Ano, line vektorizacia bola efektivna, umoznila nam zvektorizovat vypocet
realnej a imaginarnej zlozky pre jednotlive stlpce. Taktiez umoznila vyuzitie
redukcie pre predcasne ukoncenie vypoctu.

3. Jaká byla dosažena výkonnost v Intel Advisoru pro jednotlivé implementace 
(v GFLOPS)?
==============================================================================
Dosiahnuta vykonnost:
REF: 2.21 GFLOPS
LINE: 47.07 GFLOPS (vypocetnej slucky 51.05 Self GFLOPS)
BATCH: 37.86 GFLOPS (vypocetnej slucky 61.05 Self GFLOPS)

4. Jaká část kódu byla vektorizována v "Line" implementaci? Vyčteme tuto 
informaci i u batch kalkulátoru?
==============================================================================
Batch som implementoval ako Line, avsak, riadok som rozdelil na useky 
(moje batch su teda 1xM). Z toho plynie, ze rovnaka cast kodu je vektorizovana.

5. Co vyčteme z Roofline modelu pro obě vektorizované implementace?
==============================================================================
Obydve implementacie maju lepsi pristup do cache ako ref. implemetacia. 
V mojom pripade su obe implementaci zhora ohranicene "SP Vector Add Peak".
Nachadzame sa v casti, kde je program ohraniceny vypocetnou a rychlostou
pamate cache zariadenia. 
